openapi: 3.0.0
info:
  description: This is a test CASN API
  version: 1.0.0
  title: CASN API
  contact:
    email: katie@clinicaccess.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://casn-app-server/api'
tags:
  - name: dispatcher
    description: dispatcher only calls
  - name: driver
    description: driver only calls
security:
  - BearerAuth: []
paths:
  /clinic:
    get:
      summary: gets list of clinics
      operationId: getClinics
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clinic'
  /caller:
    get:
      tags:
        - dispatcher
      summary: gets caller by callerIdentifier
      operationId: getCallerByCallerIdentifier
      description: >
        Search for existing callers by the dispatcher created callerIdentifier
        (caller ID)
      parameters:
        - in: query
          name: callerIdentifier
          description: pass a search string for looking up callerIdentifier
          required: true
          schema:
            type: string
            minLength: 4
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/caller'
        '400':
          description: GAH IT IS SO BROKEN
        '404':
          description: caller not found frownies
    post:
      tags:
        - dispatcher
      summary: adds a caller
      operationId: addCaller
      description: Adds caller to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: the item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caller'
        description: callerData to add
  /appointments:
    get:
      summary: gets appointments with dispatcher-level details
      operationId: getAllAppointmentsForDispatcher
      description: >
        Get all appointments within a default date range (possibly adjustable w/
        query params).

        Appointments include details, e.g. exact location, available only to
        dispatchers.
      parameters:
        - in: query
          name: startDate
          description: pass a startDate by which to filter
          required: false
          schema:
            type: string
            minLength: 4
        - in: query
          name: endDate
          description: pass an endDate by which to filter
          required: false
          schema:
            type: string
            minLength: 4
      responses:
        '200':
          description: all appointments in date range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allAppointments'
        '400':
          description: Client Error - please check your request format & try again.
        '404':
          description: Error - Not Found
    post:
      tags:
        - dispatcher
      summary: adds a new appointment
      operationId: addAppointment
      description: Adds appointment (and drives) to the system
      responses:
        '200':
          description: Success. Created appointment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appointmentDTO'
        '400':
          description: Client Error - please check your request format & try again.
        '409':
          description: Error. That appointment already exists.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appointmentDTO'
        description: appointmentData to add
  /appointments/{appointmentID}:
    get:
      summary: gets appointment by appointmentID
      operationId: getAppointmentForDispatcherByID
      description: >
        Search for existing appointment by appointmentIdentifier, return
        dispatcher-level details
      parameters:
        - in: path
          name: appointmentID
          description: pass an appointmentIdentifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success. Found appointment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appointmentDTO'
        '400':
          description: Client Error - please check your request format & try again.
        '404':
          description: No appointment found.
    put:
      tags:
        - dispatcher
      summary: updates an existing appointment
      operationId: updateAppointment
      description: Updates appointment (and corresponding drive) information
      parameters:
        - in: path
          name: appointmentID
          description: pass an appointmentIdentifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success. Created appointment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appointmentDTO'
        '400':
          description: Client Error - please check your request format & try again.
        '404':
          description: Error. The appointment ID you requested does not exist.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appointmentDTO'
        description: appointmentData with updated fields
        required: true
    delete:
      tags:
        - dispatcher
      operationId: deleteAppointment
      parameters:
        - in: path
          name: appointmentID
          description: pass an appointmentIdentifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Success. Appointment with ID {appointmentID} was deleted.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/deleteSuccessMessage'
        '400':
          description: Client Error - please check your request format & try again.
        '404':
          description: No appointment found.
  /driver/myDrives:
    get:
      tags:
        - driver
      summary: gets applied-for and approved drives for the current user
      operationId: getMyDrives
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/driverDrive'
  /drives/apply:
    post:
      tags:
        - driver
      summary: applies a volunteer for a drive
      operationId: addDriveApplicant
      description: Adds a volunteer drive application
      responses:
        '200':
          description: Success. Added applicant record.
        '400':
          description: Client Error - please check your request format & try again.
        '404':
          description: Error. The driveId or volunteerId was not found.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                driveId:
                  description: id of drive user is applying for
                  type: integer
                  format: int64
                  example: 42
  /drives/approve:
    post:
      tags:
        - dispatcher
      summary: approves a volunteer for a drive
      operationId: addDriver
      description: Adds driverId to a drive
      responses:
        '200':
          description: Success. Added driver to drive.
        '400':
          description: Client Error - please check your request format & try again.
        '404':
          description: Error. The driveId or volunteerId was not found.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                volunteerDriveId:
                  description: id of drive to update
                  type: integer
                  format: int64
                  example: 42
  /volunteerDrive:
    get:
      tags:
        - dispatcher
      summary: get list of applicants for a drive
      operationId: getVolunteerDrives
      parameters:
        - in: query
          name: driveId
          description: id of drive
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/volunteerDrive'
components:
  schemas:
    clinic:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 42
        civiContactId:
          type: integer
          format: int64
          readOnly: true
          example: 42
        name:
          type: string
          maxLength: 100
          example: null
        phone:
          type: string
          maxLength: 20
        address:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 50
        state:
          type: string
          maxLength: 30
        postalCode:
          type: string
          maxLength: 10
    caller:
      type: object
      required:
        - callerIdentifier
        - firstName
        - lastName
        - phone
        - isMinor
        - preferredLanguage
        - preferredContactMethod
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 42
        civiContactId:
          type: integer
          format: int64
          readOnly: true
          example: 42
        callerIdentifier:
          type: string
          minLength: 4
          maxLength: 45
          example: '5551'
        firstName:
          type: string
          maxLength: 50
          example: 'Jane'
        lastName:
          type: string
          maxLength: 50
          example: 'Smith'
        phone:
          type: string
          minLength: 10
          maxLength: 20
          example: '5555551234'
        isMinor:
          type: boolean
          example: false
        preferredLanguage:
          type: string
          maxLength: 25
          example: 'French'
        preferredContactMethod:
          type: integer
          format: int32
          example: 1
        note:
          type: string
          maxLength: 500
          example: 'Free-form text goes here.'
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
    appointment:
      type: object
      required:
        - dispatcherId
        - callerId
        - clinicId
        - appointmentDate
        - appointmentTypeId
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 42
        dispatcherId:
          type: integer
          format: int64
          example: 42
        callerId:
          type: integer
          format: int64
          example: 42
        callerIdentifier:
          type: string
          minLength: 4
          maxLength: 45
          example: '5551'
        clinicId:
          type: integer
          format: int64
          example: 42
        pickupLocationVague:
          type: string
          maxLength: 255
          example: 'US59 S and BW8'
        dropoffLocationVague:
          type: string
          maxLength: 255
          example: 'I10 W and 610'
        appointmentDate:
          type: string
          format: date-time
          example: '2018-08-03T14:30:00.000Z'
        appointmentTypeId:
          type: integer
          format: int32
          example: 1
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
    drive:
      type: object
      required:
        - appointmentId
        - direction
        - startAddress
        - startCity
        - startState
        - startPostalCode
        - endAddress
        - endCity
        - endState
        - endPostalCode
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 42
        appointmentId:
          type: integer
          format: int64
          example: 42
        direction:
          type: integer
          format: int32
          example: 1
          description: '1 = toClinic, 2 = fromClinic'
        status:
          type: integer
          format: int32
          example: 0
          description: '0 = Open, 1 = Pending, 2 = Approved'
        driverId:
          type: integer
          format: int64
          example: 42
        startAddress:
          type: string
          maxLength: 100
          example: '11415 Roark Rd'
        startCity:
          type: string
          maxLength: 50
          example: 'Houston'
        startState:
          type: string
          maxLength: 30
          example: 'TX'
        startPostalCode:
          type: string
          maxLength: 10
          example: '77031'
        endAddress:
          type: string
          maxLength: 100
          example: '7373 Old Katy Rd'
        endCity:
          type: string
          maxLength: 50
          example: 'Houston'
        endState:
          type: string
          maxLength: 30
          example: 'TX'
        endPostalCode:
          type: string
          maxLength: 10
          example: '77024'
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        approved:
          type: string
          format: date-time
          readOnly: true
        approvedBy:
          type: integer
          format: int64
          readOnly: true
          example: 42
    appointmentDTO:
      properties:
        appointment:
          $ref: '#/components/schemas/appointment'
        driveTo:
          $ref: '#/components/schemas/drive'
        driveFrom:
          $ref: '#/components/schemas/drive'
    allAppointments:
      type: array
      items:
        $ref: '#/components/schemas/appointmentDTO'
    deleteSuccessMessage:
      type: object
      properties:
        message:
          type: string
          example: 'Success. Your {dataType} of ID {objectID} has been deleted.'
    volunteerDrive:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 42
        volunteerId:
          type: integer
          format: int64
          example: 42
        firstName:
          type: string
          maxLength: 50
          example: 'Alice'
        lastName:
          type: string
          maxLength: 50
          example: 'Wagner'
        mobilePhone:
          type: string
          maxLength: 20
          example: '5555554321'
        driveId:
          type: integer
          format: int64
          example: 42
        created:
          type: string
          format: date-time
          readOnly: true
          example: '2018-08-03T14:30:00.000Z'
        updated:
          type: string
          format: date-time
          readOnly: true
          example: '2018-08-03T14:30:00.000Z'
    driverDrive:
      type: object
      required:
        - id
        - volunteerDriveId
        - appointmentId
        - appointmentTypeId
        - clinicId
        - appointmentDate
        - direction
        - isApproved
        - callerIdentifier
      properties:
        id:
          type: integer
          format: int64
          example: 42
        volunteerDriveId:
          type: integer
          format: int64
          example: 42
        appointmentId:
          type: integer
          format: int64
          example: 42
        appointmentTypeId:
          type: integer
          format: int32
          example: 1
        clinicId:
          type: integer
          format: int64
          example: 42
        appointmentDate:
          type: string
          format: date-time
          example: '2018-08-03T14:30:00.000Z'
        direction:
          type: integer
          format: int32
          example: 1
          description: '1 = toClinic, 2 = fromClinic'
        isApproved:
          type: boolean
          example: false
        startLocation:
          type: string
          maxLength: 255
          example: 'US59 S and BW8'
        endLocation:
          type: string
          maxLength: 255
          example: '7373 Old Katy Rd Houston, TX 77008'
        callerIdentifier:
          type: string
          minLength: 4
          maxLength: 45
          example: '5554'
        callerName:
          type: string
          maxLength: 100
          example: 'Jane Smith'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
